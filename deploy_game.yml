---
- name: Deploy Go Game with Nginx Proxy
  hosts: game_servers
  become: yes
  vars:
    go_app_dir: /opt/go-game
    go_binary: /opt/go-game/go-game
    nginx_config_file: >-
      {% if ansible_os_family == "Debian" %}
      /etc/nginx/sites-available/game.conf
      {% else %}
      /etc/nginx/conf.d/game.conf
      {% endif %}
    game_path: "/game"

  tasks:
    - name: Install required packages
      package:
        name:
          - nginx
          - git
          - golang
        state: present

    - name: Clone Go game repository
      git:
        repo: "https://github.com/michaelkhersonsky/go-game.git"
        dest: "{{ go_app_dir }}"
        version: main
        force: yes

    - name: Build the Go application
      command: go build -o "{{ go_binary }}" "{{ go_app_dir }}/main.go"
      args:
        chdir: "{{ go_app_dir }}"
      environment:
        GOPATH: "/usr/local/go"

    - name: Ensure Go application is running
      shell: nohup "{{ go_binary }}" > /dev/null 2>&1 &
      args:
        chdir: "{{ go_app_dir }}"
      async: 10
      poll: 0

    - name: Ensure Nginx configuration directory exists
      file:
        path: "{{ nginx_config_file | dirname }}"
        state: directory
        mode: '0755'

    - name: Deploy Nginx reverse proxy configuration
      template:
        src: nginx_game_proxy.conf.j2
        dest: "{{ nginx_config_file }}"
      notify: Reload Nginx

    - name: Enable site on Debian-based systems
      file:
        src: "{{ nginx_config_file }}"
        dest: "/etc/nginx/sites-enabled/game.conf"
        state: link
      when: ansible_os_family == "Debian"
      notify: Reload Nginx

    - name: Ensure Nginx is started and enabled
      service:
        name: nginx
        state: started
        enabled: yes

  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded
